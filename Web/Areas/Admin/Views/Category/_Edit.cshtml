@model Web.Model.Category
@{
    var categories = (List<Web.Model.Category>)TempData["Categories"];
    categories.ForEach(g => g.Name = string.Concat(Enumerable.Repeat("--", g.Level1)) + g.Name);
}
@using (Ajax.BeginForm("Edit", "Category",
                new AjaxOptions
                {
                    HttpMethod = "POST",
                    OnSuccess = "Category.onEditSuccess"
                },
                new { @id = "frmData", @class = "form-horizontal" }))
{
    @Html.HiddenFor(x => x.ID)
    <div class="form-group">
        <label class="control-label col-md-2">Tên danh mục <span class="asterisk">(*)</span></label>
        <div class="col-md-9">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">Danh mục cha</label>
        <div class="col-md-9">
            @Html.DropDownListFor(x => x.ParentID, new SelectList(categories, "ID", "Name"), "-- Chọn danh mục cha --", new { @class = "form-control" })
        </div>
    </div>
        <div class="form-group">
            <label class="control-label col-md-2">Thứ tự <span class="asterisk">(*)</span></label>
            <div class="col-md-4 lockchar">
                @Html.TextBoxFor(model => model.Ordering, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="text-center">
                <button type="submit" onclick="validate()" class="btn btn-primary">Cập nhật</button>
            </div>
        </div>
        <input id="LinkSeo" type="hidden" name="LinkSeo" value="@Model.LinkSeo" />
}
<script>
    $(document).ready(function () {
        $('.lockchar').on("keypress", function () {
            return event.charCode >= 48 && event.charCode <= 57
        })
        $('#ParentID').val(@Model.ParentID);
        $("#frmData").validate({
            rules:
            {
                Name:
                {
                    required: true,
                    maxlength: 250
                },
                Ordering:
                {
                    required: true
                }
            },
            messages:
            {
                Name:
                {
                    required: "Vui lòng nhập tên danh mục"
                },
                Ordering:
                   {
                       required: "Vui lòng nhập thứ tự"
                   }
            },
            highlight: function (element) {
                jQuery(element).closest('.form-group').removeClass('has-success').addClass('has-error');
            },
            success: function (element) {
                jQuery(element).closest('.form-group').removeClass('has-error');
            }
        });
    })
</script>